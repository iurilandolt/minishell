https://medium.com/swlh/lets-build-a-linux-shell-part-iii-a472c0102849

https://dev.to/harshbanthiya/writing-my-own-minimal-shell-in-c-part-1-the-constraints-20cg


types of tokens:

redirects:

<< here_doc
< in_file
> out_file
>> out_append

commands:

builtin
	echo
	cd w/ relative or absolute path
	pwd
	export
	unset
	env
	cd

system
	anything in /bin


cmd arguments:

operators:
|

&

&&

||

enviroment variables?
$


int	valid_char(char c)
{
	if (c == '&' || c == '|' ||  c == '>' || c == '<' || c == '$')
		return (1);
	return (0);
}

int	is_space(char c)
{
	if (c == ' ')
		return (1);
	return (0);
}

int	is_backslash(char c)
{
	if (c == '\\')
		return (1);
	return (0);
}

/*
int	process_line(char *line, char **envp)
{
	t_session	session;

	session.tokens = tokenize(line, envp);
	if (!session.tokens)
		return (0);
	session.ntasks = number_of_tasks(session.tokens);
	session.operators = operator_rules(session.tokens);
	if (!session.operators)
		return (free_session(&session));
	session.pipes = create_pipes(session.operators);
	if (!session.pipes)
		return (free_session(&session));
	session.readfrom = obtain_read_documents(session.tokens,
			session.pipes, session.ntasks);
	if (!session.readfrom)
		return (free_session(&session));
	session.commands = obtain_commands(envp, session.tokens, session.ntasks);
	if (!session.commands)
		return (free_session(&session));
	session.writeto = obtain_write_documents(session.tokens, session.ntasks);
	if (!session.writeto)
		return (free_session(&session));
	print_session(&session);
	//perform_tasks(envp, &session);
	return (free_session(&session));
}
*/


< file cmd1 arg1 arg1_2 | cmd2 arg2_1 arg2_2 > file
< file ls arg1 arg1_2 | grep arg2_1 arg2_2 > file
< file /usr/bin/ls arg1 arg1_2 | /usr/bin/grep arg2_1 arg2_2 > file

echo hello && notacmd | wc

// for export and unset, make a single function that takes and enum as code,
// and performs the same operation to our own envp list or the system envp list
// if you feel fancy, make it a variendic function,
// that can perform both operations with a single function call if you pass two
// arguments, or a single operation if you pass one argument
// one func for export other for unset, one for env that prints the list
